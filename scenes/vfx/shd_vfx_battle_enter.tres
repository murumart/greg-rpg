[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://fr6t6fx74m15"]

[ext_resource type="Script" uid="uid://cklk4axk560s7" path="res://shaders/scr_rotate_uv.gd" id="1_1muvg"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_uqcwa"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.5]
op_type = 4

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_i2vm1"]
output_port_for_preview = 0
default_input_values = [1, 0.0, 2, Vector3(0, 1, 0)]
initialized = true
script = ExtResource("1_1muvg")

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_bsecc"]
function = 31

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jbsfw"]
output_port_for_preview = 0
source = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ccbl8"]
default_input_values = [1, Vector2(0.2, 0.2), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ge2rw"]
parameter_name = "zoom"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_7vh3a"]
op_type = 0

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_bkf4q"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.5]
op_type = 4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_fon3w"]
parameter_name = "white"
default_value_enabled = true

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float zoom = 1.0;
uniform float white = 0.0;
uniform sampler2D screen_tex_frg_3 : hint_screen_texture;


// RotateUV

vec2 r0tateUVFunc(vec2 _uv_r0tate, vec2 _pivot_r0tate, float _r0tation_r0tate){
	//_r0tation_r0tate = radians(_r0tationDeg_r0tate);
	vec2 _r0tAngle = vec2(cos(_r0tation_r0tate), sin(_r0tation_r0tate));
	_uv_r0tate.xy -= _pivot_r0tate;
	_uv_r0tate.xy = vec2((_uv_r0tate.x*_r0tAngle.x-_uv_r0tate.y*_r0tAngle.y),(_uv_r0tate.x*_r0tAngle.y+_uv_r0tate.y*_r0tAngle.x));
	_uv_r0tate.xy += _pivot_r0tate;
	return _uv_r0tate;
}


void fragment() {
// FloatParameter:5
	float n_out5p0 = zoom;


// FloatFunc:12
	float n_out12p0 = 1.0 - n_out5p0;


	vec2 n_out11p0;
// RotateUV:11
	vec3 n_in11p2 = vec3(0.00000, 1.00000, 0.00000);
	{
		n_out11p0 = r0tateUVFunc(UV, n_in11p2.xy, n_out12p0);
	}


// VectorCompose:6
	vec2 n_out6p0 = vec2(n_out5p0, n_out5p0);


// UVFunc:4
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (n_out11p0 - n_in4p2) * n_out6p0 + n_in4p2;


// FloatParameter:8
	float n_out8p0 = white;


// Mix:10
	vec3 n_in10p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out10p0 = mix(vec3(n_out4p0, 0.0), n_in10p1, n_out8p0);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(screen_tex_frg_3, vec2(n_out10p0.xy));


// Mix:7
	vec3 n_in7p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out7p0 = mix(vec3(n_out3p0.xyz), n_in7p1, n_out8p0);


// Output:0
	COLOR.rgb = n_out7p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(940, 380)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_jbsfw")
nodes/fragment/3/position = Vector2(400, 60)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_ccbl8")
nodes/fragment/4/position = Vector2(-160, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ge2rw")
nodes/fragment/5/position = Vector2(-760, 160)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorCompose_7vh3a")
nodes/fragment/6/position = Vector2(-440, 240)
nodes/fragment/7/node = SubResource("VisualShaderNodeMix_bkf4q")
nodes/fragment/7/position = Vector2(680, 360)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_fon3w")
nodes/fragment/8/position = Vector2(-300, 560)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_uqcwa")
nodes/fragment/10/position = Vector2(180, 40)
nodes/fragment/11/node = SubResource("VisualShaderNodeCustom_i2vm1")
nodes/fragment/11/position = Vector2(-380, -40)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatFunc_bsecc")
nodes/fragment/12/position = Vector2(-600, -20)
nodes/fragment/connections = PackedInt32Array(5, 0, 6, 0, 5, 0, 6, 1, 6, 0, 4, 1, 3, 0, 7, 0, 7, 0, 0, 0, 8, 0, 7, 2, 4, 0, 10, 0, 10, 0, 3, 0, 8, 0, 10, 2, 11, 0, 4, 0, 5, 0, 12, 0, 12, 0, 11, 1)
